var NTCOW_PickItemsInstantly = false;

function NTMain(){
	Include("libs/common/NTCommon.ntl");
	NTC_IncludeLibs();
	NTC_IncludeConfig("NTBot/char_configs");
	
	NT_LoadConfig();
	
	if(me.classid == NTC_CHAR_CLASS_NECROMANCER){
		NTConfig_SkeletonArmy = 0;
		NTConfig_MageArmy = 0;
		NTConfig_ReviveArmy = 0;
		NTConfig_NIPFilePath = new Array();
		NTConfig_NIPFilePath.push("advance/cow.nip");
	}
	
	NTSI_LoadNIPFiles("NTBot/item_configs");

	NTA_Initialize();
	
	if(me.charname == TB_leader && me.areaid == 39){
		NTCOW_ClearCowLevel();
		NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
		return;
	}
	
	if(me.charname == TB_leader) {
		NT_File("logs/msg/"+me.charname+"-helpernextgame.txt", 1, me.gamename + "/" + me.gamepassword);
		me.revealautomap = true;
		// me.showenemyonautomap = true;
		// me.showmissileonautomap = true;
	}

	if(!NTTM_CheckAct(1)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_CheckAct()");
		return;
	}
	
	NTTMGR_TownManager();
	
	switch(NTConfig_LeechCowType)
	{
		case 1:
			if(!NT_LeechFighter()){
				NTC_SendMsgToScript("NTBotGame.ntj", "NT_LeechFighter()");
			}
			break;
		case 2:
			if(!NT_LeechHelper()){
				NTC_SendMsgToScript("NTBotGame.ntj", "NT_LeechHelper()");
			}
			break;
		default:
			if(!NT_LeechPassively()){
				NTC_SendMsgToScript("NTBotGame.ntj", "NT_LeechPassively()");
			}
			break;
	}

	NTC_SendMsgToScript("NTBotGame.ntj", "SCRIPT_END");
}

function NT_LeechFighter(){	
	NTTM_TownMove("portalspot");
	
	var _starttick, _prev_areaid, helper_joined_game = false;
	
	_prev_areaid = me.areaid;
	
	NTP_DoPrecast(true);	
	while(_prev_areaid ==  me.areaid){	
		Delay(200);
		
		if(!helper_joined_game){
			helper_joined_game = NTC_InMyGame(TB_helper[0]);
			continue;
		}
		
		if(!NTC_InMyGame(TB_helper[0])){ return false; }
		NTM_UsePortal("BluePortal", 131, TB_helper[0]);
	}
	
	NTP_DoPrecast(true);
	Delay(6000);
	
	NTTM_CheckAct(1);
	
	NTTM_TownMove("akara");
	
	while(NTC_InMyParty(TB_helper[0])){
		if(NTCOW_CheckCowPortal()){ break; }
		Delay(200);
	}
	
	Delay(4000); // wait for Helper leave game
	
	if(!NTCOW_TakeCowPortal()){
		NTC_SendMsgToScript("NTBotGame.ntj", "Failed to take Cow Portal.");
		return false;
	}
	
	Delay(1000);
	NTCOW_ClearCowLevel();
	
	return true;
}

function NT_LeechHelper(){
	if(!NTCOW_CheckCowPortal()){		
		var leg;
		NTU_ClearCube();
		NTT_ClearInventory();
		
		if(!NTCOW_GetLeg()){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTCOW_GetLeg()");
			return false;
		}
		
		leg = NTCOW_GetLegUnit();
		if(!leg){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTCOW_GetLegUnit()");
			return false;
		}
		
		NTM_MakeTP();
		Delay(2000);
		NTP_DoPrecast(true);
		Delay(2000);
		NTP_DoPrecast(true);
		Delay(2000);
		NTP_DoPrecast(true);
		
		NTTM_CheckAct(1);
		
		var tome = NTCOW_GetTome();
		if(!tome){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTCOW_GetTome()");
		}
		
		NTCOW_OpenCowPortal(leg, tome);
		if(!NTCOW_CheckCowPortal()){	
			NTC_SendMsgToScript("NTBotGame.ntj", "NTCOW_OpenCowPortal()");
		}
	}
	
	Print(COLOR_4 + "Cow portal is up, it's time to Moo Moo!");
	Delay(500);
	
	return true;
}

function NT_LeechPassively(){	
	NTTM_TownMove("portalspot");
	
	var _starttick, _prev_areaid, helper_joined_game = false;
	
	_prev_areaid = me.areaid;
	
	NTP_DoPrecast(true);	
	while(_prev_areaid ==  me.areaid){	
		Delay(200);
		
		if(!helper_joined_game){
			helper_joined_game = NTC_InMyGame(TB_helper[0]);
			continue;
		}
		
		if(!NTC_InMyGame(TB_helper[0])){ return false; }
		NTM_UsePortal("BluePortal", 131, TB_helper[0]);
	}
	
	NTP_DoPrecast(true);
	Delay(2000);
	NTP_DoPrecast(true);
	Delay(2000);
	NTP_DoPrecast(true);
		
	return true;
}

// Internal functions
function NTCOW_CheckCowPortal(){
	var _portal = NTC_FindUnit(NTC_UNIT_OBJECT, 60, 5);
	if(_portal){
		if(_portal.subareaid == 39){
			return true;
		}
	}
	else
		return false;
}

function NTCOW_GetTP(){
	var _portals = me.GetItems("tbk");

	if (_portals)
	{
		for (var i = 0; i < _portals.length; i++)
		{
			if (_portals[i].mode == 0 && (_portals[i].itemloc != 0 || NTConfig_Columns[_portals[i].y][_portals[i].x] > 0))
			{
				return _portals[i];
			}
		}
	}
	return false;
}

function NTCOW_TakeCowPortal(){
	var _portal;

	_portal = NTC_FindUnit(NTC_UNIT_OBJECT, 60, 5);

	if(_portal){
		return NTM_UsePortal("Portal", 39, "dummy", _portal);
	}
	
	return false;
}

function NTCOW_SecondTomeTP(npc, type, amount){
	var _items;
	var _counter = 0;

	if(arguments.length < 1)
		return false;

	if(arguments.length < 2)
		type = 0;

	if(arguments.length < 0)
		amount = 1;

	if(amount == 0)
		return false;

	if(type)
		_items = npc.GetItems("tbk");

	if(_items)
	{
		if(_items.length > 0)
		{
			for(var i = 0 ; i < amount ; i++)
			{
				if(NTT_ShopItem(_items[0], npc, 2))
					_counter++;
			}
		}
	}
	return (_counter > 0);
}

function NTCOW_GetLegUnit(){
	var _items, _leg;
	_items = me.GetItems(88);
	if(_items){
		_leg = _items[0];
	}
	
	return _leg;
}

function NTCOW_GetLeg(){	
	var _leg;
	
	if(!NTTM_TownMove("waypoint")){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTTM_TownMove(waypoint)");
		return false;
	}
	if(!NTM_TakeWaypoint(4)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeWaypoint(4)");
		return false;
	}
	
	NTP_DoPrecast();
	
	if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_OBJECT, 22, 10, 10)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToPresetUnit()");
		return false;
	}
	
	NTC_PingDelay(2000);
	
	if(!NTM_UsePortal("Portal", 38)){
		NTC_SendMsgToScript("NTBotGame.ntj", "NTM_UsePortal()");
		return false;
	}
	
	var _wirtbody = NTC_FindUnit(NTC_UNIT_OBJECT, 268);
	
	if(!_wirtbody){
		NTC_SendMsgToScript("NTBotGame.ntj", "Wirt's body not found.");
		return false;
	}
	
	if(!NTM_MoveTo(_wirtbody.areaid, _wirtbody.x+3, _wirtbody.y)){
		NTC_SendMsgToScript("NTBotGame.ntj", "Failed to move to Wirt's body.");
		return false;
	}
	
	if(!NTC_OpenChest(_wirtbody)){
		NTC_SendMsgToScript("NTBotGame.ntj", "Failed to open Wirt's body for leg.");
		return false;
	}
	
	NTC_PingDelay(1000);
	for (i = 0; i < 10; i++){
		NTC_Delay(NTC_DELAY_FRAME);
		_leg = NTC_FindUnit(NTC_UNIT_ITEM, 88);
		if (_leg)
			break;
	}
	
	if(!NTT_CheckSpace(_leg.xsize, _leg.ysize)){
		NTTMGR_VisitTown();
	}
	
	for (i = 0; i < 20; i++){
		if ((i % 5) == 0){
			if (_leg.mode == 3 || _leg.mode == 5){
				if (NTC_ClearCursor())
				NTC_DoClick(NTC_CLICK_LDOWN, NTC_SHIFT_NONE, _leg);
			}
		}
		NTC_PingDelay(100);
		if (_leg.mode != 3 && _leg.mode != 5){
			return true;
		}
	}
	
	return false;
}

function NTCOW_GetTome(){
	var _npc, _portal;
	NTTM_TownMove("akara");
	
	for(var i = 0; i < 10; i++)
	{
		_npc = NTC_FindUnit(NTC_UNIT_NPC, NTC_NPC_ID_AKARA);
		
		if(_npc)
			break;
	}

	if(_npc)
	{
		if(NTT_DoInteract(_npc))
		{
			if(NTT_DoTrade(_npc))
			{
				NTT_FillTome(_npc, 1);
				NTT_FillTome(_npc, 0);
				NTCOW_SecondTomeTP(_npc, "tbk", 1);
				
				_portal = NTCOW_GetTP();
				
				if(!_portal)
				{
					NTC_SendMsgToScript("NTBotGame.ntj", "NTR_GetTP()");
					return _portal;
				}
			}		
		}
		
		me.Cancel(1);
	}
	
	return _portal;
}

function NTCOW_OpenCowPortal(leg, tome){
	var _items = me.GetItems(NTC_UNIT_CUBE);
	
	if(!_items || _items.length < 1)
		return false;
		
	var _cube = _items[0];
	
	if(!_cube){
		NTC_SendMsgToScript("NTBotGame.ntj", "No cube found.");
		return false;
	}
	
	// open inventory
	SetUIState(0x01, true);
	
	// clear cube
	if(NTCU_CheckCubeInventoryInt() > 0)
	{
		if(!NTCU_OpenCubeInt(_items[0]))
			return false;

		if(NTU_ClearCube() < 1){
			NTC_SendMsgToScript("NTBotGame.ntj", "NTU_ClearCube()");
			return false;
		}

		NTCU_CloseCubeInt();
	}
	
	NTCU_OpenCubeInt(_cube);
	
	NTCU_MoveItemToCubeInt(_cube, leg);
	NTCU_MoveItemToCubeInt(_cube, tome);
		
	if(!NTCOW_Transmute(_cube)){
		NTC_SendMsgToScript("NTBotGame.ntj", "Transmute()");
		return false;
	}
	
	NTCU_CloseCubeInt();
	
	me.Cancel(1);	
	
	Delay(250);
	
	return true;
}

function NTCOW_Transmute(cube)
{		
	var msgFile;
	var msg;
	var path = "logs/transmute/" + me.charname + ".txt";
	
	msgFile = NT_File(path, 1, "ready");
	if(msgFile){		
		msgFile.Close();
	}	
	
	Delay(1500);
	
	var cubeitems = NTCU_GetItemsInCube();
	if(cubeitems.length > 0){
		NTU_ClearCube();
		return false;
	}
	return true;
}

function NTCOW_BuildCowRooms() {
	var i, j, room, finalRooms = [],

	room = GetRoom();

	do {
		finalRooms.push([room.x * 5 + room.xsize / 2, room.y * 5 + room.ysize / 2]);		
	} while (room.GetNext());

	return finalRooms;
}

function NTCOW_ClearCowLevel() {

	var room, result, myRoom,
		rooms = NTCOW_BuildCowRooms();
		
	Print("Built cow rooms.");
	Delay(1000);

	function RoomSort(a, b) {
		return GetDistance(myRoom[0], myRoom[1], a[0], a[1]) - GetDistance(myRoom[0], myRoom[1], b[0], b[1]);
	}

	myRoom = [me.x, me.y];
	
	while (rooms.length > 0) {
		rooms.sort(RoomSort);
		
		Print("Rooms sorted.");
		
		RunGC();
		
		Delay(100);
		
		room = rooms.shift();
		
		if(!NTCOW_MoveTo(me.areaid, room[0], room[1], 3, true)){
			// return false;
			continue;
		}
		myRoom = room;
	}

	return true;
}

function NTCOW_ClearPosition(range, pickitem, safelevel){
	var _orgx, _orgy;
	var _skiplist;
	var _attackcount = 0;
	var _target;
	var _distance, _mingid, _mindistance;
	var _result;
	var _firstAttack = true;
	
	switch(arguments.length)
	{
	case 0:
		range = 20;
	case 1:
		pickitem = false;
	default:
		if(NTConfig_CheckSelfSafe < 0x01 && NTConfig_CheckMercSafe < 0x01)
			safelevel = 0;
		break;
	}

	_orgx = me.x;
	_orgy = me.y;

	Print("NTCOW_ClearPosition()");
	
	for(var i = 0; i < 3; i++)
	{
		while(_attackcount < (i+1)*5000)
		{
			Delay(40);
			_mindistance = 1E6;

			_target = NTC_FindUnit(NTC_UNIT_MONSTER);

			if(_target)
			{
				do
				{
					if(_target.IsAttackable())
					{
						if(GetDistance(_orgx, _orgy, _target.x, _target.y) <= range && NTCOW_IsValidMonster(_target))
						{
							_distance = GetDistance(me, _target);

							if(_distance < _mindistance)
							{
								_mingid = _target.gid;
								_mindistance = _distance;
								if(_mindistance <= 10){
									break;
								}
							}
						}
					}					
				} while(_target.GetNext());
			}

			if(_mindistance < 1E6)
			{
				_target = NTC_FindUnit(NTC_UNIT_MONSTER, _mingid, 1);

				if(_target)
				{
					if(_firstAttack){
						NTC_CastSkill(78, NTC_HAND_RIGHT, _target); // Bone wall
						Delay(40);
						_firstAttack = false;
					}
					
					_result = NTA_Attack(_target, (_attackcount % 30) == 0);

					switch(_result)
					{
						case 1:
							break;
						case 2:
						case 3:
							if(NTCOW_PickItemsInstantly && (_target.hp <= 0 || _target.mode == 0 || _target.mode == 12))
								NTSI_PickItems();
							_attackcount++;
							break;
						default:
							_attackcount = 1E6;
					}
				}
			}
			else
				break;
		}
	}

	// if(_attackcount > 2 && me.classid == NTC_CHAR_CLASS_NECROMANCER)
	// {
		// NTA_NecRaiseArmy();
	// }
	
	if(pickitem && _attackcount > 0)
		NTSI_PickItems();
	
	switch(safelevel)
	{
		case 1:
			return NTTMGR_CheckSafe(0x00, NTConfig_CheckMercSafe&0x01);
		case 2:
			return NTTMGR_CheckSafe(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe);
	}

	return true;
}

function NTCOW_IsValidMonster(monster)
{
	if(!monster) {
		return false;
	}
	
	if(monster.hp <= 0 || monster.mode == 0 || monster.mode == 12)
		return false;
		
	return true;	
}

function NTCOW_MoveTo(areaId, x, y, retry, isClearPath){
	if (x == me.x && y == me.y)
		return true;

	if (arguments.length < 4)
		retry = 3;
	if (arguments.length < 5)
		isClearPath = false;

	var j;
	var _path;
	var _preX, _preY;

	_path = GetPath(areaId, me.x, me.y, x, y, true);
	if (!_path)
		return false;

	for (var i = 0; i < _path.length; i++)
	{
		for (j = 0; j < retry; j++)
		{
			if (NTM_MoveTo(me.areaid, _path[i][0], _path[i][1]))
				break;
		}

		if (j >= retry)
			return false;
				
		if (isClearPath)
		{
			_preX = me.x;
			_preY = me.y;

			if(!NTCOW_ClearPosition(25, true))
				return false;

			NTP_DoPrecast();
			
			if (me.x != _preX || me.y != _preY)
			{
				if (!NTM_MoveTo(me.areaid, _preX, _preY))
					return false;
			}
		}
	}
	
	return true;
}
